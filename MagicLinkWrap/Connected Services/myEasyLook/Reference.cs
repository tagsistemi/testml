//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MagicLinkWrap.myEasyLook {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://tempuri.org/", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="myEasyLook.EasyLookServiceSoap")]
    public interface EasyLookServiceSoap {
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://tempuri.org/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/XmlExecuteReport", ReplyAction="*")]
        MagicLinkWrap.myEasyLook.XmlExecuteReportResponse XmlExecuteReport(MagicLinkWrap.myEasyLook.XmlExecuteReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/XmlExecuteReport", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.XmlExecuteReportResponse> XmlExecuteReportAsync(MagicLinkWrap.myEasyLook.XmlExecuteReportRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://tempuri.org/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/XmlExecuteReportWithNotValidFields", ReplyAction="*")]
        MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsResponse XmlExecuteReportWithNotValidFields(MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/XmlExecuteReportWithNotValidFields", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsResponse> XmlExecuteReportWithNotValidFieldsAsync(MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://tempuri.org/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/XmlExecuteReportEI", ReplyAction="*")]
        MagicLinkWrap.myEasyLook.XmlExecuteReportEIResponse XmlExecuteReportEI(MagicLinkWrap.myEasyLook.XmlExecuteReportEIRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/XmlExecuteReportEI", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.XmlExecuteReportEIResponse> XmlExecuteReportEIAsync(MagicLinkWrap.myEasyLook.XmlExecuteReportEIRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PdfExecuteReport", ReplyAction="*")]
        MagicLinkWrap.myEasyLook.PdfExecuteReportResponse PdfExecuteReport(MagicLinkWrap.myEasyLook.PdfExecuteReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PdfExecuteReport", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.PdfExecuteReportResponse> PdfExecuteReportAsync(MagicLinkWrap.myEasyLook.PdfExecuteReportRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://tempuri.org/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/XmlGetParameters", ReplyAction="*")]
        MagicLinkWrap.myEasyLook.XmlGetParametersResponse XmlGetParameters(MagicLinkWrap.myEasyLook.XmlGetParametersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/XmlGetParameters", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.XmlGetParametersResponse> XmlGetParametersAsync(MagicLinkWrap.myEasyLook.XmlGetParametersRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class XmlExecuteReportRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="XmlExecuteReport", Namespace="http://tempuri.org/", Order=0)]
        public MagicLinkWrap.myEasyLook.XmlExecuteReportRequestBody Body;
        
        public XmlExecuteReportRequest() {
        }
        
        public XmlExecuteReportRequest(MagicLinkWrap.myEasyLook.XmlExecuteReportRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class XmlExecuteReportRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string parameters;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime applicationDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string impersonatedUser;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool useApproximation;
        
        public XmlExecuteReportRequestBody() {
        }
        
        public XmlExecuteReportRequestBody(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation) {
            this.authenticationToken = authenticationToken;
            this.parameters = parameters;
            this.applicationDate = applicationDate;
            this.impersonatedUser = impersonatedUser;
            this.useApproximation = useApproximation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class XmlExecuteReportResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="XmlExecuteReportResponse", Namespace="http://tempuri.org/", Order=0)]
        public MagicLinkWrap.myEasyLook.XmlExecuteReportResponseBody Body;
        
        public XmlExecuteReportResponse() {
        }
        
        public XmlExecuteReportResponse(MagicLinkWrap.myEasyLook.XmlExecuteReportResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class XmlExecuteReportResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MagicLinkWrap.myEasyLook.ArrayOfString XmlExecuteReportResult;
        
        public XmlExecuteReportResponseBody() {
        }
        
        public XmlExecuteReportResponseBody(MagicLinkWrap.myEasyLook.ArrayOfString XmlExecuteReportResult) {
            this.XmlExecuteReportResult = XmlExecuteReportResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class XmlExecuteReportWithNotValidFieldsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="XmlExecuteReportWithNotValidFields", Namespace="http://tempuri.org/", Order=0)]
        public MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsRequestBody Body;
        
        public XmlExecuteReportWithNotValidFieldsRequest() {
        }
        
        public XmlExecuteReportWithNotValidFieldsRequest(MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class XmlExecuteReportWithNotValidFieldsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string parameters;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime applicationDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string impersonatedUser;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool useApproximation;
        
        public XmlExecuteReportWithNotValidFieldsRequestBody() {
        }
        
        public XmlExecuteReportWithNotValidFieldsRequestBody(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation) {
            this.authenticationToken = authenticationToken;
            this.parameters = parameters;
            this.applicationDate = applicationDate;
            this.impersonatedUser = impersonatedUser;
            this.useApproximation = useApproximation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class XmlExecuteReportWithNotValidFieldsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="XmlExecuteReportWithNotValidFieldsResponse", Namespace="http://tempuri.org/", Order=0)]
        public MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsResponseBody Body;
        
        public XmlExecuteReportWithNotValidFieldsResponse() {
        }
        
        public XmlExecuteReportWithNotValidFieldsResponse(MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class XmlExecuteReportWithNotValidFieldsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MagicLinkWrap.myEasyLook.ArrayOfString XmlExecuteReportWithNotValidFieldsResult;
        
        public XmlExecuteReportWithNotValidFieldsResponseBody() {
        }
        
        public XmlExecuteReportWithNotValidFieldsResponseBody(MagicLinkWrap.myEasyLook.ArrayOfString XmlExecuteReportWithNotValidFieldsResult) {
            this.XmlExecuteReportWithNotValidFieldsResult = XmlExecuteReportWithNotValidFieldsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class XmlExecuteReportEIRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="XmlExecuteReportEI", Namespace="http://tempuri.org/", Order=0)]
        public MagicLinkWrap.myEasyLook.XmlExecuteReportEIRequestBody Body;
        
        public XmlExecuteReportEIRequest() {
        }
        
        public XmlExecuteReportEIRequest(MagicLinkWrap.myEasyLook.XmlExecuteReportEIRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class XmlExecuteReportEIRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string parameters;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime applicationDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string impersonatedUser;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool useApproximation;
        
        public XmlExecuteReportEIRequestBody() {
        }
        
        public XmlExecuteReportEIRequestBody(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation) {
            this.authenticationToken = authenticationToken;
            this.parameters = parameters;
            this.applicationDate = applicationDate;
            this.impersonatedUser = impersonatedUser;
            this.useApproximation = useApproximation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class XmlExecuteReportEIResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="XmlExecuteReportEIResponse", Namespace="http://tempuri.org/", Order=0)]
        public MagicLinkWrap.myEasyLook.XmlExecuteReportEIResponseBody Body;
        
        public XmlExecuteReportEIResponse() {
        }
        
        public XmlExecuteReportEIResponse(MagicLinkWrap.myEasyLook.XmlExecuteReportEIResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class XmlExecuteReportEIResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MagicLinkWrap.myEasyLook.ArrayOfString XmlExecuteReportEIResult;
        
        public XmlExecuteReportEIResponseBody() {
        }
        
        public XmlExecuteReportEIResponseBody(MagicLinkWrap.myEasyLook.ArrayOfString XmlExecuteReportEIResult) {
            this.XmlExecuteReportEIResult = XmlExecuteReportEIResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PdfExecuteReportRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PdfExecuteReport", Namespace="http://tempuri.org/", Order=0)]
        public MagicLinkWrap.myEasyLook.PdfExecuteReportRequestBody Body;
        
        public PdfExecuteReportRequest() {
        }
        
        public PdfExecuteReportRequest(MagicLinkWrap.myEasyLook.PdfExecuteReportRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class PdfExecuteReportRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string parameters;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime applicationDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string impersonatedUser;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool useApproximation;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string diagnostic;
        
        public PdfExecuteReportRequestBody() {
        }
        
        public PdfExecuteReportRequestBody(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation, string diagnostic) {
            this.authenticationToken = authenticationToken;
            this.parameters = parameters;
            this.applicationDate = applicationDate;
            this.impersonatedUser = impersonatedUser;
            this.useApproximation = useApproximation;
            this.diagnostic = diagnostic;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PdfExecuteReportResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PdfExecuteReportResponse", Namespace="http://tempuri.org/", Order=0)]
        public MagicLinkWrap.myEasyLook.PdfExecuteReportResponseBody Body;
        
        public PdfExecuteReportResponse() {
        }
        
        public PdfExecuteReportResponse(MagicLinkWrap.myEasyLook.PdfExecuteReportResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class PdfExecuteReportResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public byte[] PdfExecuteReportResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string diagnostic;
        
        public PdfExecuteReportResponseBody() {
        }
        
        public PdfExecuteReportResponseBody(byte[] PdfExecuteReportResult, string diagnostic) {
            this.PdfExecuteReportResult = PdfExecuteReportResult;
            this.diagnostic = diagnostic;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class XmlGetParametersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="XmlGetParameters", Namespace="http://tempuri.org/", Order=0)]
        public MagicLinkWrap.myEasyLook.XmlGetParametersRequestBody Body;
        
        public XmlGetParametersRequest() {
        }
        
        public XmlGetParametersRequest(MagicLinkWrap.myEasyLook.XmlGetParametersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class XmlGetParametersRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string parameters;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime applicationDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string impersonatedUser;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool useApproximation;
        
        public XmlGetParametersRequestBody() {
        }
        
        public XmlGetParametersRequestBody(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation) {
            this.authenticationToken = authenticationToken;
            this.parameters = parameters;
            this.applicationDate = applicationDate;
            this.impersonatedUser = impersonatedUser;
            this.useApproximation = useApproximation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class XmlGetParametersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="XmlGetParametersResponse", Namespace="http://tempuri.org/", Order=0)]
        public MagicLinkWrap.myEasyLook.XmlGetParametersResponseBody Body;
        
        public XmlGetParametersResponse() {
        }
        
        public XmlGetParametersResponse(MagicLinkWrap.myEasyLook.XmlGetParametersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class XmlGetParametersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string XmlGetParametersResult;
        
        public XmlGetParametersResponseBody() {
        }
        
        public XmlGetParametersResponseBody(string XmlGetParametersResult) {
            this.XmlGetParametersResult = XmlGetParametersResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EasyLookServiceSoapChannel : MagicLinkWrap.myEasyLook.EasyLookServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EasyLookServiceSoapClient : System.ServiceModel.ClientBase<MagicLinkWrap.myEasyLook.EasyLookServiceSoap>, MagicLinkWrap.myEasyLook.EasyLookServiceSoap {
        
        public EasyLookServiceSoapClient() {
        }
        
        public EasyLookServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EasyLookServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EasyLookServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EasyLookServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myEasyLook.XmlExecuteReportResponse MagicLinkWrap.myEasyLook.EasyLookServiceSoap.XmlExecuteReport(MagicLinkWrap.myEasyLook.XmlExecuteReportRequest request) {
            return base.Channel.XmlExecuteReport(request);
        }
        
        public MagicLinkWrap.myEasyLook.ArrayOfString XmlExecuteReport(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation) {
            MagicLinkWrap.myEasyLook.XmlExecuteReportRequest inValue = new MagicLinkWrap.myEasyLook.XmlExecuteReportRequest();
            inValue.Body = new MagicLinkWrap.myEasyLook.XmlExecuteReportRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.impersonatedUser = impersonatedUser;
            inValue.Body.useApproximation = useApproximation;
            MagicLinkWrap.myEasyLook.XmlExecuteReportResponse retVal = ((MagicLinkWrap.myEasyLook.EasyLookServiceSoap)(this)).XmlExecuteReport(inValue);
            return retVal.Body.XmlExecuteReportResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.XmlExecuteReportResponse> MagicLinkWrap.myEasyLook.EasyLookServiceSoap.XmlExecuteReportAsync(MagicLinkWrap.myEasyLook.XmlExecuteReportRequest request) {
            return base.Channel.XmlExecuteReportAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.XmlExecuteReportResponse> XmlExecuteReportAsync(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation) {
            MagicLinkWrap.myEasyLook.XmlExecuteReportRequest inValue = new MagicLinkWrap.myEasyLook.XmlExecuteReportRequest();
            inValue.Body = new MagicLinkWrap.myEasyLook.XmlExecuteReportRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.impersonatedUser = impersonatedUser;
            inValue.Body.useApproximation = useApproximation;
            return ((MagicLinkWrap.myEasyLook.EasyLookServiceSoap)(this)).XmlExecuteReportAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsResponse MagicLinkWrap.myEasyLook.EasyLookServiceSoap.XmlExecuteReportWithNotValidFields(MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsRequest request) {
            return base.Channel.XmlExecuteReportWithNotValidFields(request);
        }
        
        public MagicLinkWrap.myEasyLook.ArrayOfString XmlExecuteReportWithNotValidFields(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation) {
            MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsRequest inValue = new MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsRequest();
            inValue.Body = new MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.impersonatedUser = impersonatedUser;
            inValue.Body.useApproximation = useApproximation;
            MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsResponse retVal = ((MagicLinkWrap.myEasyLook.EasyLookServiceSoap)(this)).XmlExecuteReportWithNotValidFields(inValue);
            return retVal.Body.XmlExecuteReportWithNotValidFieldsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsResponse> MagicLinkWrap.myEasyLook.EasyLookServiceSoap.XmlExecuteReportWithNotValidFieldsAsync(MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsRequest request) {
            return base.Channel.XmlExecuteReportWithNotValidFieldsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsResponse> XmlExecuteReportWithNotValidFieldsAsync(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation) {
            MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsRequest inValue = new MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsRequest();
            inValue.Body = new MagicLinkWrap.myEasyLook.XmlExecuteReportWithNotValidFieldsRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.impersonatedUser = impersonatedUser;
            inValue.Body.useApproximation = useApproximation;
            return ((MagicLinkWrap.myEasyLook.EasyLookServiceSoap)(this)).XmlExecuteReportWithNotValidFieldsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myEasyLook.XmlExecuteReportEIResponse MagicLinkWrap.myEasyLook.EasyLookServiceSoap.XmlExecuteReportEI(MagicLinkWrap.myEasyLook.XmlExecuteReportEIRequest request) {
            return base.Channel.XmlExecuteReportEI(request);
        }
        
        public MagicLinkWrap.myEasyLook.ArrayOfString XmlExecuteReportEI(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation) {
            MagicLinkWrap.myEasyLook.XmlExecuteReportEIRequest inValue = new MagicLinkWrap.myEasyLook.XmlExecuteReportEIRequest();
            inValue.Body = new MagicLinkWrap.myEasyLook.XmlExecuteReportEIRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.impersonatedUser = impersonatedUser;
            inValue.Body.useApproximation = useApproximation;
            MagicLinkWrap.myEasyLook.XmlExecuteReportEIResponse retVal = ((MagicLinkWrap.myEasyLook.EasyLookServiceSoap)(this)).XmlExecuteReportEI(inValue);
            return retVal.Body.XmlExecuteReportEIResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.XmlExecuteReportEIResponse> MagicLinkWrap.myEasyLook.EasyLookServiceSoap.XmlExecuteReportEIAsync(MagicLinkWrap.myEasyLook.XmlExecuteReportEIRequest request) {
            return base.Channel.XmlExecuteReportEIAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.XmlExecuteReportEIResponse> XmlExecuteReportEIAsync(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation) {
            MagicLinkWrap.myEasyLook.XmlExecuteReportEIRequest inValue = new MagicLinkWrap.myEasyLook.XmlExecuteReportEIRequest();
            inValue.Body = new MagicLinkWrap.myEasyLook.XmlExecuteReportEIRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.impersonatedUser = impersonatedUser;
            inValue.Body.useApproximation = useApproximation;
            return ((MagicLinkWrap.myEasyLook.EasyLookServiceSoap)(this)).XmlExecuteReportEIAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myEasyLook.PdfExecuteReportResponse MagicLinkWrap.myEasyLook.EasyLookServiceSoap.PdfExecuteReport(MagicLinkWrap.myEasyLook.PdfExecuteReportRequest request) {
            return base.Channel.PdfExecuteReport(request);
        }
        
        public byte[] PdfExecuteReport(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation, ref string diagnostic) {
            MagicLinkWrap.myEasyLook.PdfExecuteReportRequest inValue = new MagicLinkWrap.myEasyLook.PdfExecuteReportRequest();
            inValue.Body = new MagicLinkWrap.myEasyLook.PdfExecuteReportRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.impersonatedUser = impersonatedUser;
            inValue.Body.useApproximation = useApproximation;
            inValue.Body.diagnostic = diagnostic;
            MagicLinkWrap.myEasyLook.PdfExecuteReportResponse retVal = ((MagicLinkWrap.myEasyLook.EasyLookServiceSoap)(this)).PdfExecuteReport(inValue);
            diagnostic = retVal.Body.diagnostic;
            return retVal.Body.PdfExecuteReportResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.PdfExecuteReportResponse> MagicLinkWrap.myEasyLook.EasyLookServiceSoap.PdfExecuteReportAsync(MagicLinkWrap.myEasyLook.PdfExecuteReportRequest request) {
            return base.Channel.PdfExecuteReportAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.PdfExecuteReportResponse> PdfExecuteReportAsync(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation, string diagnostic) {
            MagicLinkWrap.myEasyLook.PdfExecuteReportRequest inValue = new MagicLinkWrap.myEasyLook.PdfExecuteReportRequest();
            inValue.Body = new MagicLinkWrap.myEasyLook.PdfExecuteReportRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.impersonatedUser = impersonatedUser;
            inValue.Body.useApproximation = useApproximation;
            inValue.Body.diagnostic = diagnostic;
            return ((MagicLinkWrap.myEasyLook.EasyLookServiceSoap)(this)).PdfExecuteReportAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myEasyLook.XmlGetParametersResponse MagicLinkWrap.myEasyLook.EasyLookServiceSoap.XmlGetParameters(MagicLinkWrap.myEasyLook.XmlGetParametersRequest request) {
            return base.Channel.XmlGetParameters(request);
        }
        
        public string XmlGetParameters(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation) {
            MagicLinkWrap.myEasyLook.XmlGetParametersRequest inValue = new MagicLinkWrap.myEasyLook.XmlGetParametersRequest();
            inValue.Body = new MagicLinkWrap.myEasyLook.XmlGetParametersRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.impersonatedUser = impersonatedUser;
            inValue.Body.useApproximation = useApproximation;
            MagicLinkWrap.myEasyLook.XmlGetParametersResponse retVal = ((MagicLinkWrap.myEasyLook.EasyLookServiceSoap)(this)).XmlGetParameters(inValue);
            return retVal.Body.XmlGetParametersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.XmlGetParametersResponse> MagicLinkWrap.myEasyLook.EasyLookServiceSoap.XmlGetParametersAsync(MagicLinkWrap.myEasyLook.XmlGetParametersRequest request) {
            return base.Channel.XmlGetParametersAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myEasyLook.XmlGetParametersResponse> XmlGetParametersAsync(string authenticationToken, string parameters, System.DateTime applicationDate, string impersonatedUser, bool useApproximation) {
            MagicLinkWrap.myEasyLook.XmlGetParametersRequest inValue = new MagicLinkWrap.myEasyLook.XmlGetParametersRequest();
            inValue.Body = new MagicLinkWrap.myEasyLook.XmlGetParametersRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.impersonatedUser = impersonatedUser;
            inValue.Body.useApproximation = useApproximation;
            return ((MagicLinkWrap.myEasyLook.EasyLookServiceSoap)(this)).XmlGetParametersAsync(inValue);
        }
    }
}
