//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MagicLinkWrap.myTaskBuilderServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCFBinding", Namespace="http://microarea.it/TbServices/")]
    public enum WCFBinding : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BasicHttp = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetTcp = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://microarea.it/TbServices/", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiagnosticSimpleItem", Namespace="http://microarea.it/TbServices/")]
    [System.SerializableAttribute()]
    public partial class DiagnosticSimpleItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private MagicLinkWrap.myTaskBuilderServices.DiagnosticType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public MagicLinkWrap.myTaskBuilderServices.DiagnosticType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiagnosticType", Namespace="http://microarea.it/TbServices/")]
    public enum DiagnosticType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LogInfo = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FatalError = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Banner = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LogOnFile = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 256,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://microarea.it/TbServices/", ConfigurationName="myTaskBuilderServices.TbServicesSoap")]
    public interface TbServicesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/Init", ReplyAction="*")]
        void Init();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/Init", ReplyAction="*")]
        System.Threading.Tasks.Task InitAsync();
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/CloseTB", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.CloseTBResponse CloseTB(MagicLinkWrap.myTaskBuilderServices.CloseTBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/CloseTB", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.CloseTBResponse> CloseTBAsync(MagicLinkWrap.myTaskBuilderServices.CloseTBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/CreateTB", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.CreateTBResponse CreateTB(MagicLinkWrap.myTaskBuilderServices.CreateTBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/CreateTB", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.CreateTBResponse> CreateTBAsync(MagicLinkWrap.myTaskBuilderServices.CreateTBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/CreateTBEx", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.CreateTBExResponse CreateTBEx(MagicLinkWrap.myTaskBuilderServices.CreateTBExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/CreateTBEx", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.CreateTBExResponse> CreateTBExAsync(MagicLinkWrap.myTaskBuilderServices.CreateTBExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetWCFBinding", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.WCFBinding GetWCFBinding();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetWCFBinding", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.WCFBinding> GetWCFBindingAsync();
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento easyToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/ReleaseTB", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.ReleaseTBResponse ReleaseTB(MagicLinkWrap.myTaskBuilderServices.ReleaseTBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/ReleaseTB", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.ReleaseTBResponse> ReleaseTBAsync(MagicLinkWrap.myTaskBuilderServices.ReleaseTBRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetTbLoaderInstantiatedListXML", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLResponse GetTbLoaderInstantiatedListXML(MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetTbLoaderInstantiatedListXML", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLResponse> GetTbLoaderInstantiatedListXMLAsync(MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/IsTbLoaderInstantiated", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedResponse IsTbLoaderInstantiated(MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/IsTbLoaderInstantiated", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedResponse> IsTbLoaderInstantiatedAsync(MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/KillThread", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.KillThreadResponse KillThread(MagicLinkWrap.myTaskBuilderServices.KillThreadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/KillThread", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.KillThreadResponse> KillThreadAsync(MagicLinkWrap.myTaskBuilderServices.KillThreadRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/StopThread", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.StopThreadResponse StopThread(MagicLinkWrap.myTaskBuilderServices.StopThreadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/StopThread", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.StopThreadResponse> StopThreadAsync(MagicLinkWrap.myTaskBuilderServices.StopThreadRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/KillProcess", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.KillProcessResponse KillProcess(MagicLinkWrap.myTaskBuilderServices.KillProcessRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/KillProcess", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.KillProcessResponse> KillProcessAsync(MagicLinkWrap.myTaskBuilderServices.KillProcessRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/StopProcess", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.StopProcessResponse StopProcess(MagicLinkWrap.myTaskBuilderServices.StopProcessRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/StopProcess", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.StopProcessResponse> StopProcessAsync(MagicLinkWrap.myTaskBuilderServices.StopProcessRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/SetForceApplicationDate", ReplyAction="*")]
        void SetForceApplicationDate(bool force);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/SetForceApplicationDate", ReplyAction="*")]
        System.Threading.Tasks.Task SetForceApplicationDateAsync(bool force);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/SetData", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.SetDataResponse SetData(MagicLinkWrap.myTaskBuilderServices.SetDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/SetData", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.SetDataResponse> SetDataAsync(MagicLinkWrap.myTaskBuilderServices.SetDataRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetData", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetDataResponse GetData(MagicLinkWrap.myTaskBuilderServices.GetDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetData", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetDataResponse> GetDataAsync(MagicLinkWrap.myTaskBuilderServices.GetDataRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/XmlGetParameters", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.XmlGetParametersResponse XmlGetParameters(MagicLinkWrap.myTaskBuilderServices.XmlGetParametersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/XmlGetParameters", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.XmlGetParametersResponse> XmlGetParametersAsync(MagicLinkWrap.myTaskBuilderServices.XmlGetParametersRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetXMLHotLink", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkResponse GetXMLHotLink(MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetXMLHotLink", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkResponse> GetXMLHotLinkAsync(MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetDocumentSchema", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaResponse GetDocumentSchema(MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetDocumentSchema", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaResponse> GetDocumentSchemaAsync(MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetReportSchema", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetReportSchemaResponse GetReportSchema(MagicLinkWrap.myTaskBuilderServices.GetReportSchemaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetReportSchema", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetReportSchemaResponse> GetReportSchemaAsync(MagicLinkWrap.myTaskBuilderServices.GetReportSchemaRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetXMLEnum", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetXMLEnumResponse GetXMLEnum(MagicLinkWrap.myTaskBuilderServices.GetXMLEnumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetXMLEnum", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetXMLEnumResponse> GetXMLEnumAsync(MagicLinkWrap.myTaskBuilderServices.GetXMLEnumRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento userLanguage dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetEnumsXml", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlResponse GetEnumsXml(MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetEnumsXml", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlResponse> GetEnumsXmlAsync(MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetXMLHotLinkDef", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefResponse GetXMLHotLinkDef(MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetXMLHotLinkDef", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefResponse> GetXMLHotLinkDefAsync(MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/RunFunction", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.RunFunctionResponse RunFunction(MagicLinkWrap.myTaskBuilderServices.RunFunctionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/RunFunction", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.RunFunctionResponse> RunFunctionAsync(MagicLinkWrap.myTaskBuilderServices.RunFunctionRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetCachedFile", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetCachedFileResponse GetCachedFile(MagicLinkWrap.myTaskBuilderServices.GetCachedFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetCachedFile", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetCachedFileResponse> GetCachedFileAsync(MagicLinkWrap.myTaskBuilderServices.GetCachedFileRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetFileStream", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetFileStreamResponse GetFileStream(MagicLinkWrap.myTaskBuilderServices.GetFileStreamRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetFileStream", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetFileStreamResponse> GetFileStreamAsync(MagicLinkWrap.myTaskBuilderServices.GetFileStreamRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/IsAlive", ReplyAction="*")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/IsAlive", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsAliveAsync();
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento authenticationToken dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetDiagnosticItems", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsResponse GetDiagnosticItems(MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetDiagnosticItems", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsResponse> GetDiagnosticItemsAsync(MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetServerPrinterNames", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesResponse GetServerPrinterNames(MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetServerPrinterNames", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesResponse> GetServerPrinterNamesAsync(MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesRequest request);
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento GetInstalledCulturesResult dallo spazio dei nomi http://microarea.it/TbServices/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetInstalledCultures", ReplyAction="*")]
        MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesResponse GetInstalledCultures(MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microarea.it/TbServices/GetInstalledCultures", ReplyAction="*")]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesResponse> GetInstalledCulturesAsync(MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CloseTBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CloseTB", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.CloseTBRequestBody Body;
        
        public CloseTBRequest() {
        }
        
        public CloseTBRequest(MagicLinkWrap.myTaskBuilderServices.CloseTBRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class CloseTBRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        public CloseTBRequestBody() {
        }
        
        public CloseTBRequestBody(string authenticationToken) {
            this.authenticationToken = authenticationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CloseTBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CloseTBResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.CloseTBResponseBody Body;
        
        public CloseTBResponse() {
        }
        
        public CloseTBResponse(MagicLinkWrap.myTaskBuilderServices.CloseTBResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class CloseTBResponseBody {
        
        public CloseTBResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateTBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateTB", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.CreateTBRequestBody Body;
        
        public CreateTBRequest() {
        }
        
        public CreateTBRequest(MagicLinkWrap.myTaskBuilderServices.CreateTBRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class CreateTBRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime applicationDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool checkDate;
        
        public CreateTBRequestBody() {
        }
        
        public CreateTBRequestBody(string authenticationToken, System.DateTime applicationDate, bool checkDate) {
            this.authenticationToken = authenticationToken;
            this.applicationDate = applicationDate;
            this.checkDate = checkDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateTBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateTBResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.CreateTBResponseBody Body;
        
        public CreateTBResponse() {
        }
        
        public CreateTBResponse(MagicLinkWrap.myTaskBuilderServices.CreateTBResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class CreateTBResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int CreateTBResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string easyToken;
        
        public CreateTBResponseBody() {
        }
        
        public CreateTBResponseBody(int CreateTBResult, string easyToken) {
            this.CreateTBResult = CreateTBResult;
            this.easyToken = easyToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateTBExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateTBEx", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.CreateTBExRequestBody Body;
        
        public CreateTBExRequest() {
        }
        
        public CreateTBExRequest(MagicLinkWrap.myTaskBuilderServices.CreateTBExRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class CreateTBExRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime applicationDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool checkDate;
        
        public CreateTBExRequestBody() {
        }
        
        public CreateTBExRequestBody(string authenticationToken, System.DateTime applicationDate, bool checkDate) {
            this.authenticationToken = authenticationToken;
            this.applicationDate = applicationDate;
            this.checkDate = checkDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateTBExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateTBExResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.CreateTBExResponseBody Body;
        
        public CreateTBExResponse() {
        }
        
        public CreateTBExResponse(MagicLinkWrap.myTaskBuilderServices.CreateTBExResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class CreateTBExResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int CreateTBExResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string easyToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string server;
        
        public CreateTBExResponseBody() {
        }
        
        public CreateTBExResponseBody(int CreateTBExResult, string easyToken, string server) {
            this.CreateTBExResult = CreateTBExResult;
            this.easyToken = easyToken;
            this.server = server;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReleaseTBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReleaseTB", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.ReleaseTBRequestBody Body;
        
        public ReleaseTBRequest() {
        }
        
        public ReleaseTBRequest(MagicLinkWrap.myTaskBuilderServices.ReleaseTBRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class ReleaseTBRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string easyToken;
        
        public ReleaseTBRequestBody() {
        }
        
        public ReleaseTBRequestBody(string easyToken) {
            this.easyToken = easyToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReleaseTBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReleaseTBResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.ReleaseTBResponseBody Body;
        
        public ReleaseTBResponse() {
        }
        
        public ReleaseTBResponse(MagicLinkWrap.myTaskBuilderServices.ReleaseTBResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ReleaseTBResponseBody {
        
        public ReleaseTBResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTbLoaderInstantiatedListXMLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTbLoaderInstantiatedListXML", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLRequestBody Body;
        
        public GetTbLoaderInstantiatedListXMLRequest() {
        }
        
        public GetTbLoaderInstantiatedListXMLRequest(MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetTbLoaderInstantiatedListXMLRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        public GetTbLoaderInstantiatedListXMLRequestBody() {
        }
        
        public GetTbLoaderInstantiatedListXMLRequestBody(string authenticationToken) {
            this.authenticationToken = authenticationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTbLoaderInstantiatedListXMLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTbLoaderInstantiatedListXMLResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLResponseBody Body;
        
        public GetTbLoaderInstantiatedListXMLResponse() {
        }
        
        public GetTbLoaderInstantiatedListXMLResponse(MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetTbLoaderInstantiatedListXMLResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetTbLoaderInstantiatedListXMLResult;
        
        public GetTbLoaderInstantiatedListXMLResponseBody() {
        }
        
        public GetTbLoaderInstantiatedListXMLResponseBody(string GetTbLoaderInstantiatedListXMLResult) {
            this.GetTbLoaderInstantiatedListXMLResult = GetTbLoaderInstantiatedListXMLResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsTbLoaderInstantiatedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsTbLoaderInstantiated", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedRequestBody Body;
        
        public IsTbLoaderInstantiatedRequest() {
        }
        
        public IsTbLoaderInstantiatedRequest(MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class IsTbLoaderInstantiatedRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        public IsTbLoaderInstantiatedRequestBody() {
        }
        
        public IsTbLoaderInstantiatedRequestBody(string authenticationToken) {
            this.authenticationToken = authenticationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsTbLoaderInstantiatedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsTbLoaderInstantiatedResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedResponseBody Body;
        
        public IsTbLoaderInstantiatedResponse() {
        }
        
        public IsTbLoaderInstantiatedResponse(MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class IsTbLoaderInstantiatedResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool IsTbLoaderInstantiatedResult;
        
        public IsTbLoaderInstantiatedResponseBody() {
        }
        
        public IsTbLoaderInstantiatedResponseBody(bool IsTbLoaderInstantiatedResult) {
            this.IsTbLoaderInstantiatedResult = IsTbLoaderInstantiatedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class KillThreadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="KillThread", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.KillThreadRequestBody Body;
        
        public KillThreadRequest() {
        }
        
        public KillThreadRequest(MagicLinkWrap.myTaskBuilderServices.KillThreadRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class KillThreadRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int threadID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int processId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string authenticationToken;
        
        public KillThreadRequestBody() {
        }
        
        public KillThreadRequestBody(int threadID, int processId, string authenticationToken) {
            this.threadID = threadID;
            this.processId = processId;
            this.authenticationToken = authenticationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class KillThreadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="KillThreadResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.KillThreadResponseBody Body;
        
        public KillThreadResponse() {
        }
        
        public KillThreadResponse(MagicLinkWrap.myTaskBuilderServices.KillThreadResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class KillThreadResponseBody {
        
        public KillThreadResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StopThreadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StopThread", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.StopThreadRequestBody Body;
        
        public StopThreadRequest() {
        }
        
        public StopThreadRequest(MagicLinkWrap.myTaskBuilderServices.StopThreadRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class StopThreadRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int threadID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int processId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string authenticationToken;
        
        public StopThreadRequestBody() {
        }
        
        public StopThreadRequestBody(int threadID, int processId, string authenticationToken) {
            this.threadID = threadID;
            this.processId = processId;
            this.authenticationToken = authenticationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StopThreadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StopThreadResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.StopThreadResponseBody Body;
        
        public StopThreadResponse() {
        }
        
        public StopThreadResponse(MagicLinkWrap.myTaskBuilderServices.StopThreadResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class StopThreadResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool StopThreadResult;
        
        public StopThreadResponseBody() {
        }
        
        public StopThreadResponseBody(bool StopThreadResult) {
            this.StopThreadResult = StopThreadResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class KillProcessRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="KillProcess", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.KillProcessRequestBody Body;
        
        public KillProcessRequest() {
        }
        
        public KillProcessRequest(MagicLinkWrap.myTaskBuilderServices.KillProcessRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class KillProcessRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int processId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string authenticationToken;
        
        public KillProcessRequestBody() {
        }
        
        public KillProcessRequestBody(int processId, string authenticationToken) {
            this.processId = processId;
            this.authenticationToken = authenticationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class KillProcessResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="KillProcessResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.KillProcessResponseBody Body;
        
        public KillProcessResponse() {
        }
        
        public KillProcessResponse(MagicLinkWrap.myTaskBuilderServices.KillProcessResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class KillProcessResponseBody {
        
        public KillProcessResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StopProcessRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StopProcess", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.StopProcessRequestBody Body;
        
        public StopProcessRequest() {
        }
        
        public StopProcessRequest(MagicLinkWrap.myTaskBuilderServices.StopProcessRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class StopProcessRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int processId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string authenticationToken;
        
        public StopProcessRequestBody() {
        }
        
        public StopProcessRequestBody(int processId, string authenticationToken) {
            this.processId = processId;
            this.authenticationToken = authenticationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StopProcessResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StopProcessResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.StopProcessResponseBody Body;
        
        public StopProcessResponse() {
        }
        
        public StopProcessResponse(MagicLinkWrap.myTaskBuilderServices.StopProcessResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class StopProcessResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool StopProcessResult;
        
        public StopProcessResponseBody() {
        }
        
        public StopProcessResponseBody(bool StopProcessResult) {
            this.StopProcessResult = StopProcessResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetData", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.SetDataRequestBody Body;
        
        public SetDataRequest() {
        }
        
        public SetDataRequest(MagicLinkWrap.myTaskBuilderServices.SetDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class SetDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string data;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime applicationDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int postingAction;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool useApproximation;
        
        public SetDataRequestBody() {
        }
        
        public SetDataRequestBody(string authenticationToken, string data, System.DateTime applicationDate, int postingAction, bool useApproximation) {
            this.authenticationToken = authenticationToken;
            this.data = data;
            this.applicationDate = applicationDate;
            this.postingAction = postingAction;
            this.useApproximation = useApproximation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetDataResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.SetDataResponseBody Body;
        
        public SetDataResponse() {
        }
        
        public SetDataResponse(MagicLinkWrap.myTaskBuilderServices.SetDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class SetDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool SetDataResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string result;
        
        public SetDataResponseBody() {
        }
        
        public SetDataResponseBody(bool SetDataResult, string result) {
            this.SetDataResult = SetDataResult;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetData", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetDataRequestBody Body;
        
        public GetDataRequest() {
        }
        
        public GetDataRequest(MagicLinkWrap.myTaskBuilderServices.GetDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string parameters;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime applicationDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int loadAction;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int resultType;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int formatType;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool useApproximation;
        
        public GetDataRequestBody() {
        }
        
        public GetDataRequestBody(string authenticationToken, string parameters, System.DateTime applicationDate, int loadAction, int resultType, int formatType, bool useApproximation) {
            this.authenticationToken = authenticationToken;
            this.parameters = parameters;
            this.applicationDate = applicationDate;
            this.loadAction = loadAction;
            this.resultType = resultType;
            this.formatType = formatType;
            this.useApproximation = useApproximation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDataResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetDataResponseBody Body;
        
        public GetDataResponse() {
        }
        
        public GetDataResponse(MagicLinkWrap.myTaskBuilderServices.GetDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.ArrayOfString GetDataResult;
        
        public GetDataResponseBody() {
        }
        
        public GetDataResponseBody(MagicLinkWrap.myTaskBuilderServices.ArrayOfString GetDataResult) {
            this.GetDataResult = GetDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class XmlGetParametersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="XmlGetParameters", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.XmlGetParametersRequestBody Body;
        
        public XmlGetParametersRequest() {
        }
        
        public XmlGetParametersRequest(MagicLinkWrap.myTaskBuilderServices.XmlGetParametersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class XmlGetParametersRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string parameters;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime applicationDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool useApproximation;
        
        public XmlGetParametersRequestBody() {
        }
        
        public XmlGetParametersRequestBody(string authenticationToken, string parameters, System.DateTime applicationDate, bool useApproximation) {
            this.authenticationToken = authenticationToken;
            this.parameters = parameters;
            this.applicationDate = applicationDate;
            this.useApproximation = useApproximation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class XmlGetParametersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="XmlGetParametersResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.XmlGetParametersResponseBody Body;
        
        public XmlGetParametersResponse() {
        }
        
        public XmlGetParametersResponse(MagicLinkWrap.myTaskBuilderServices.XmlGetParametersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class XmlGetParametersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string XmlGetParametersResult;
        
        public XmlGetParametersResponseBody() {
        }
        
        public XmlGetParametersResponseBody(string XmlGetParametersResult) {
            this.XmlGetParametersResult = XmlGetParametersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetXMLHotLinkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetXMLHotLink", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkRequestBody Body;
        
        public GetXMLHotLinkRequest() {
        }
        
        public GetXMLHotLinkRequest(MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetXMLHotLinkRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string docNamespace;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string nsUri;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fieldXPath;
        
        public GetXMLHotLinkRequestBody() {
        }
        
        public GetXMLHotLinkRequestBody(string authenticationToken, string docNamespace, string nsUri, string fieldXPath) {
            this.authenticationToken = authenticationToken;
            this.docNamespace = docNamespace;
            this.nsUri = nsUri;
            this.fieldXPath = fieldXPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetXMLHotLinkResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetXMLHotLinkResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkResponseBody Body;
        
        public GetXMLHotLinkResponse() {
        }
        
        public GetXMLHotLinkResponse(MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetXMLHotLinkResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetXMLHotLinkResult;
        
        public GetXMLHotLinkResponseBody() {
        }
        
        public GetXMLHotLinkResponseBody(string GetXMLHotLinkResult) {
            this.GetXMLHotLinkResult = GetXMLHotLinkResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDocumentSchemaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDocumentSchema", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaRequestBody Body;
        
        public GetDocumentSchemaRequest() {
        }
        
        public GetDocumentSchemaRequest(MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetDocumentSchemaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string documentNamespace;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string profileName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string forUser;
        
        public GetDocumentSchemaRequestBody() {
        }
        
        public GetDocumentSchemaRequestBody(string authenticationToken, string documentNamespace, string profileName, string forUser) {
            this.authenticationToken = authenticationToken;
            this.documentNamespace = documentNamespace;
            this.profileName = profileName;
            this.forUser = forUser;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDocumentSchemaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDocumentSchemaResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaResponseBody Body;
        
        public GetDocumentSchemaResponse() {
        }
        
        public GetDocumentSchemaResponse(MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetDocumentSchemaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetDocumentSchemaResult;
        
        public GetDocumentSchemaResponseBody() {
        }
        
        public GetDocumentSchemaResponseBody(string GetDocumentSchemaResult) {
            this.GetDocumentSchemaResult = GetDocumentSchemaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReportSchemaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetReportSchema", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetReportSchemaRequestBody Body;
        
        public GetReportSchemaRequest() {
        }
        
        public GetReportSchemaRequest(MagicLinkWrap.myTaskBuilderServices.GetReportSchemaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetReportSchemaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string reportNamespace;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string forUser;
        
        public GetReportSchemaRequestBody() {
        }
        
        public GetReportSchemaRequestBody(string authenticationToken, string reportNamespace, string forUser) {
            this.authenticationToken = authenticationToken;
            this.reportNamespace = reportNamespace;
            this.forUser = forUser;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReportSchemaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetReportSchemaResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetReportSchemaResponseBody Body;
        
        public GetReportSchemaResponse() {
        }
        
        public GetReportSchemaResponse(MagicLinkWrap.myTaskBuilderServices.GetReportSchemaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetReportSchemaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetReportSchemaResult;
        
        public GetReportSchemaResponseBody() {
        }
        
        public GetReportSchemaResponseBody(string GetReportSchemaResult) {
            this.GetReportSchemaResult = GetReportSchemaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetXMLEnumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetXMLEnum", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetXMLEnumRequestBody Body;
        
        public GetXMLEnumRequest() {
        }
        
        public GetXMLEnumRequest(MagicLinkWrap.myTaskBuilderServices.GetXMLEnumRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetXMLEnumRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int enumID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string userLanguage;
        
        public GetXMLEnumRequestBody() {
        }
        
        public GetXMLEnumRequestBody(string authenticationToken, int enumID, string userLanguage) {
            this.authenticationToken = authenticationToken;
            this.enumID = enumID;
            this.userLanguage = userLanguage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetXMLEnumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetXMLEnumResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetXMLEnumResponseBody Body;
        
        public GetXMLEnumResponse() {
        }
        
        public GetXMLEnumResponse(MagicLinkWrap.myTaskBuilderServices.GetXMLEnumResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetXMLEnumResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetXMLEnumResult;
        
        public GetXMLEnumResponseBody() {
        }
        
        public GetXMLEnumResponseBody(string GetXMLEnumResult) {
            this.GetXMLEnumResult = GetXMLEnumResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetEnumsXmlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetEnumsXml", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlRequestBody Body;
        
        public GetEnumsXmlRequest() {
        }
        
        public GetEnumsXmlRequest(MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetEnumsXmlRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string userLanguage;
        
        public GetEnumsXmlRequestBody() {
        }
        
        public GetEnumsXmlRequestBody(string userLanguage) {
            this.userLanguage = userLanguage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetEnumsXmlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetEnumsXmlResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlResponseBody Body;
        
        public GetEnumsXmlResponse() {
        }
        
        public GetEnumsXmlResponse(MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetEnumsXmlResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetEnumsXmlResult;
        
        public GetEnumsXmlResponseBody() {
        }
        
        public GetEnumsXmlResponseBody(string GetEnumsXmlResult) {
            this.GetEnumsXmlResult = GetEnumsXmlResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetXMLHotLinkDefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetXMLHotLinkDef", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefRequestBody Body;
        
        public GetXMLHotLinkDefRequest() {
        }
        
        public GetXMLHotLinkDefRequest(MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetXMLHotLinkDefRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string docNameSpace;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string nsUri;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fieldXPath;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string companyName;
        
        public GetXMLHotLinkDefRequestBody() {
        }
        
        public GetXMLHotLinkDefRequestBody(string authenticationToken, string docNameSpace, string nsUri, string fieldXPath, string companyName) {
            this.authenticationToken = authenticationToken;
            this.docNameSpace = docNameSpace;
            this.nsUri = nsUri;
            this.fieldXPath = fieldXPath;
            this.companyName = companyName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetXMLHotLinkDefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetXMLHotLinkDefResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefResponseBody Body;
        
        public GetXMLHotLinkDefResponse() {
        }
        
        public GetXMLHotLinkDefResponse(MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetXMLHotLinkDefResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetXMLHotLinkDefResult;
        
        public GetXMLHotLinkDefResponseBody() {
        }
        
        public GetXMLHotLinkDefResponseBody(string GetXMLHotLinkDefResult) {
            this.GetXMLHotLinkDefResult = GetXMLHotLinkDefResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunFunctionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RunFunction", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.RunFunctionRequestBody Body;
        
        public RunFunctionRequest() {
        }
        
        public RunFunctionRequest(MagicLinkWrap.myTaskBuilderServices.RunFunctionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class RunFunctionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string request;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string nameSpace;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string functionName;
        
        public RunFunctionRequestBody() {
        }
        
        public RunFunctionRequestBody(string authenticationToken, string request, string nameSpace, string functionName) {
            this.authenticationToken = authenticationToken;
            this.request = request;
            this.nameSpace = nameSpace;
            this.functionName = functionName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunFunctionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RunFunctionResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.RunFunctionResponseBody Body;
        
        public RunFunctionResponse() {
        }
        
        public RunFunctionResponse(MagicLinkWrap.myTaskBuilderServices.RunFunctionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class RunFunctionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string RunFunctionResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string errorMsg;
        
        public RunFunctionResponseBody() {
        }
        
        public RunFunctionResponseBody(string RunFunctionResult, string errorMsg) {
            this.RunFunctionResult = RunFunctionResult;
            this.errorMsg = errorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCachedFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCachedFile", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetCachedFileRequestBody Body;
        
        public GetCachedFileRequest() {
        }
        
        public GetCachedFileRequest(MagicLinkWrap.myTaskBuilderServices.GetCachedFileRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetCachedFileRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string nameSpace;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string user;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string company;
        
        public GetCachedFileRequestBody() {
        }
        
        public GetCachedFileRequestBody(string authenticationToken, string nameSpace, string user, string company) {
            this.authenticationToken = authenticationToken;
            this.nameSpace = nameSpace;
            this.user = user;
            this.company = company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCachedFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCachedFileResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetCachedFileResponseBody Body;
        
        public GetCachedFileResponse() {
        }
        
        public GetCachedFileResponse(MagicLinkWrap.myTaskBuilderServices.GetCachedFileResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetCachedFileResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetCachedFileResult;
        
        public GetCachedFileResponseBody() {
        }
        
        public GetCachedFileResponseBody(string GetCachedFileResult) {
            this.GetCachedFileResult = GetCachedFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileStreamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileStream", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetFileStreamRequestBody Body;
        
        public GetFileStreamRequest() {
        }
        
        public GetFileStreamRequest(MagicLinkWrap.myTaskBuilderServices.GetFileStreamRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetFileStreamRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string nameSpace;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string user;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string company;
        
        public GetFileStreamRequestBody() {
        }
        
        public GetFileStreamRequestBody(string authenticationToken, string nameSpace, string user, string company) {
            this.authenticationToken = authenticationToken;
            this.nameSpace = nameSpace;
            this.user = user;
            this.company = company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileStreamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileStreamResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetFileStreamResponseBody Body;
        
        public GetFileStreamResponse() {
        }
        
        public GetFileStreamResponse(MagicLinkWrap.myTaskBuilderServices.GetFileStreamResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetFileStreamResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public byte[] GetFileStreamResult;
        
        public GetFileStreamResponseBody() {
        }
        
        public GetFileStreamResponseBody(byte[] GetFileStreamResult) {
            this.GetFileStreamResult = GetFileStreamResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDiagnosticItemsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDiagnosticItems", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsRequestBody Body;
        
        public GetDiagnosticItemsRequest() {
        }
        
        public GetDiagnosticItemsRequest(MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetDiagnosticItemsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string authenticationToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool clear;
        
        public GetDiagnosticItemsRequestBody() {
        }
        
        public GetDiagnosticItemsRequestBody(string authenticationToken, bool clear) {
            this.authenticationToken = authenticationToken;
            this.clear = clear;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDiagnosticItemsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDiagnosticItemsResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsResponseBody Body;
        
        public GetDiagnosticItemsResponse() {
        }
        
        public GetDiagnosticItemsResponse(MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetDiagnosticItemsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.DiagnosticSimpleItem[] GetDiagnosticItemsResult;
        
        public GetDiagnosticItemsResponseBody() {
        }
        
        public GetDiagnosticItemsResponseBody(MagicLinkWrap.myTaskBuilderServices.DiagnosticSimpleItem[] GetDiagnosticItemsResult) {
            this.GetDiagnosticItemsResult = GetDiagnosticItemsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetServerPrinterNamesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetServerPrinterNames", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesRequestBody Body;
        
        public GetServerPrinterNamesRequest() {
        }
        
        public GetServerPrinterNamesRequest(MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetServerPrinterNamesRequestBody {
        
        public GetServerPrinterNamesRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetServerPrinterNamesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetServerPrinterNamesResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesResponseBody Body;
        
        public GetServerPrinterNamesResponse() {
        }
        
        public GetServerPrinterNamesResponse(MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetServerPrinterNamesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool GetServerPrinterNamesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public MagicLinkWrap.myTaskBuilderServices.ArrayOfString printers;
        
        public GetServerPrinterNamesResponseBody() {
        }
        
        public GetServerPrinterNamesResponseBody(bool GetServerPrinterNamesResult, MagicLinkWrap.myTaskBuilderServices.ArrayOfString printers) {
            this.GetServerPrinterNamesResult = GetServerPrinterNamesResult;
            this.printers = printers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetInstalledCulturesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetInstalledCultures", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesRequestBody Body;
        
        public GetInstalledCulturesRequest() {
        }
        
        public GetInstalledCulturesRequest(MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetInstalledCulturesRequestBody {
        
        public GetInstalledCulturesRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetInstalledCulturesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetInstalledCulturesResponse", Namespace="http://microarea.it/TbServices/", Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesResponseBody Body;
        
        public GetInstalledCulturesResponse() {
        }
        
        public GetInstalledCulturesResponse(MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microarea.it/TbServices/")]
    public partial class GetInstalledCulturesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MagicLinkWrap.myTaskBuilderServices.ArrayOfString GetInstalledCulturesResult;
        
        public GetInstalledCulturesResponseBody() {
        }
        
        public GetInstalledCulturesResponseBody(MagicLinkWrap.myTaskBuilderServices.ArrayOfString GetInstalledCulturesResult) {
            this.GetInstalledCulturesResult = GetInstalledCulturesResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TbServicesSoapChannel : MagicLinkWrap.myTaskBuilderServices.TbServicesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TbServicesSoapClient : System.ServiceModel.ClientBase<MagicLinkWrap.myTaskBuilderServices.TbServicesSoap>, MagicLinkWrap.myTaskBuilderServices.TbServicesSoap {
        
        public TbServicesSoapClient() {
        }
        
        public TbServicesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TbServicesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TbServicesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TbServicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Init() {
            base.Channel.Init();
        }
        
        public System.Threading.Tasks.Task InitAsync() {
            return base.Channel.InitAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.CloseTBResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.CloseTB(MagicLinkWrap.myTaskBuilderServices.CloseTBRequest request) {
            return base.Channel.CloseTB(request);
        }
        
        public void CloseTB(string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.CloseTBRequest inValue = new MagicLinkWrap.myTaskBuilderServices.CloseTBRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.CloseTBRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            MagicLinkWrap.myTaskBuilderServices.CloseTBResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).CloseTB(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.CloseTBResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.CloseTBAsync(MagicLinkWrap.myTaskBuilderServices.CloseTBRequest request) {
            return base.Channel.CloseTBAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.CloseTBResponse> CloseTBAsync(string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.CloseTBRequest inValue = new MagicLinkWrap.myTaskBuilderServices.CloseTBRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.CloseTBRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).CloseTBAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.CreateTBResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.CreateTB(MagicLinkWrap.myTaskBuilderServices.CreateTBRequest request) {
            return base.Channel.CreateTB(request);
        }
        
        public int CreateTB(string authenticationToken, System.DateTime applicationDate, bool checkDate, out string easyToken) {
            MagicLinkWrap.myTaskBuilderServices.CreateTBRequest inValue = new MagicLinkWrap.myTaskBuilderServices.CreateTBRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.CreateTBRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.checkDate = checkDate;
            MagicLinkWrap.myTaskBuilderServices.CreateTBResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).CreateTB(inValue);
            easyToken = retVal.Body.easyToken;
            return retVal.Body.CreateTBResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.CreateTBResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.CreateTBAsync(MagicLinkWrap.myTaskBuilderServices.CreateTBRequest request) {
            return base.Channel.CreateTBAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.CreateTBResponse> CreateTBAsync(string authenticationToken, System.DateTime applicationDate, bool checkDate) {
            MagicLinkWrap.myTaskBuilderServices.CreateTBRequest inValue = new MagicLinkWrap.myTaskBuilderServices.CreateTBRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.CreateTBRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.checkDate = checkDate;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).CreateTBAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.CreateTBExResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.CreateTBEx(MagicLinkWrap.myTaskBuilderServices.CreateTBExRequest request) {
            return base.Channel.CreateTBEx(request);
        }
        
        public int CreateTBEx(string authenticationToken, System.DateTime applicationDate, bool checkDate, out string easyToken, out string server) {
            MagicLinkWrap.myTaskBuilderServices.CreateTBExRequest inValue = new MagicLinkWrap.myTaskBuilderServices.CreateTBExRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.CreateTBExRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.checkDate = checkDate;
            MagicLinkWrap.myTaskBuilderServices.CreateTBExResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).CreateTBEx(inValue);
            easyToken = retVal.Body.easyToken;
            server = retVal.Body.server;
            return retVal.Body.CreateTBExResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.CreateTBExResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.CreateTBExAsync(MagicLinkWrap.myTaskBuilderServices.CreateTBExRequest request) {
            return base.Channel.CreateTBExAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.CreateTBExResponse> CreateTBExAsync(string authenticationToken, System.DateTime applicationDate, bool checkDate) {
            MagicLinkWrap.myTaskBuilderServices.CreateTBExRequest inValue = new MagicLinkWrap.myTaskBuilderServices.CreateTBExRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.CreateTBExRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.checkDate = checkDate;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).CreateTBExAsync(inValue);
        }
        
        public MagicLinkWrap.myTaskBuilderServices.WCFBinding GetWCFBinding() {
            return base.Channel.GetWCFBinding();
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.WCFBinding> GetWCFBindingAsync() {
            return base.Channel.GetWCFBindingAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.ReleaseTBResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.ReleaseTB(MagicLinkWrap.myTaskBuilderServices.ReleaseTBRequest request) {
            return base.Channel.ReleaseTB(request);
        }
        
        public void ReleaseTB(string easyToken) {
            MagicLinkWrap.myTaskBuilderServices.ReleaseTBRequest inValue = new MagicLinkWrap.myTaskBuilderServices.ReleaseTBRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.ReleaseTBRequestBody();
            inValue.Body.easyToken = easyToken;
            MagicLinkWrap.myTaskBuilderServices.ReleaseTBResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).ReleaseTB(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.ReleaseTBResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.ReleaseTBAsync(MagicLinkWrap.myTaskBuilderServices.ReleaseTBRequest request) {
            return base.Channel.ReleaseTBAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.ReleaseTBResponse> ReleaseTBAsync(string easyToken) {
            MagicLinkWrap.myTaskBuilderServices.ReleaseTBRequest inValue = new MagicLinkWrap.myTaskBuilderServices.ReleaseTBRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.ReleaseTBRequestBody();
            inValue.Body.easyToken = easyToken;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).ReleaseTBAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetTbLoaderInstantiatedListXML(MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLRequest request) {
            return base.Channel.GetTbLoaderInstantiatedListXML(request);
        }
        
        public string GetTbLoaderInstantiatedListXML(string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetTbLoaderInstantiatedListXML(inValue);
            return retVal.Body.GetTbLoaderInstantiatedListXMLResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetTbLoaderInstantiatedListXMLAsync(MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLRequest request) {
            return base.Channel.GetTbLoaderInstantiatedListXMLAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLResponse> GetTbLoaderInstantiatedListXMLAsync(string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetTbLoaderInstantiatedListXMLRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetTbLoaderInstantiatedListXMLAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.IsTbLoaderInstantiated(MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedRequest request) {
            return base.Channel.IsTbLoaderInstantiated(request);
        }
        
        public bool IsTbLoaderInstantiated(string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedRequest inValue = new MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).IsTbLoaderInstantiated(inValue);
            return retVal.Body.IsTbLoaderInstantiatedResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.IsTbLoaderInstantiatedAsync(MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedRequest request) {
            return base.Channel.IsTbLoaderInstantiatedAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedResponse> IsTbLoaderInstantiatedAsync(string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedRequest inValue = new MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.IsTbLoaderInstantiatedRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).IsTbLoaderInstantiatedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.KillThreadResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.KillThread(MagicLinkWrap.myTaskBuilderServices.KillThreadRequest request) {
            return base.Channel.KillThread(request);
        }
        
        public void KillThread(int threadID, int processId, string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.KillThreadRequest inValue = new MagicLinkWrap.myTaskBuilderServices.KillThreadRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.KillThreadRequestBody();
            inValue.Body.threadID = threadID;
            inValue.Body.processId = processId;
            inValue.Body.authenticationToken = authenticationToken;
            MagicLinkWrap.myTaskBuilderServices.KillThreadResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).KillThread(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.KillThreadResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.KillThreadAsync(MagicLinkWrap.myTaskBuilderServices.KillThreadRequest request) {
            return base.Channel.KillThreadAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.KillThreadResponse> KillThreadAsync(int threadID, int processId, string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.KillThreadRequest inValue = new MagicLinkWrap.myTaskBuilderServices.KillThreadRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.KillThreadRequestBody();
            inValue.Body.threadID = threadID;
            inValue.Body.processId = processId;
            inValue.Body.authenticationToken = authenticationToken;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).KillThreadAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.StopThreadResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.StopThread(MagicLinkWrap.myTaskBuilderServices.StopThreadRequest request) {
            return base.Channel.StopThread(request);
        }
        
        public bool StopThread(int threadID, int processId, string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.StopThreadRequest inValue = new MagicLinkWrap.myTaskBuilderServices.StopThreadRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.StopThreadRequestBody();
            inValue.Body.threadID = threadID;
            inValue.Body.processId = processId;
            inValue.Body.authenticationToken = authenticationToken;
            MagicLinkWrap.myTaskBuilderServices.StopThreadResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).StopThread(inValue);
            return retVal.Body.StopThreadResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.StopThreadResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.StopThreadAsync(MagicLinkWrap.myTaskBuilderServices.StopThreadRequest request) {
            return base.Channel.StopThreadAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.StopThreadResponse> StopThreadAsync(int threadID, int processId, string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.StopThreadRequest inValue = new MagicLinkWrap.myTaskBuilderServices.StopThreadRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.StopThreadRequestBody();
            inValue.Body.threadID = threadID;
            inValue.Body.processId = processId;
            inValue.Body.authenticationToken = authenticationToken;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).StopThreadAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.KillProcessResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.KillProcess(MagicLinkWrap.myTaskBuilderServices.KillProcessRequest request) {
            return base.Channel.KillProcess(request);
        }
        
        public void KillProcess(int processId, string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.KillProcessRequest inValue = new MagicLinkWrap.myTaskBuilderServices.KillProcessRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.KillProcessRequestBody();
            inValue.Body.processId = processId;
            inValue.Body.authenticationToken = authenticationToken;
            MagicLinkWrap.myTaskBuilderServices.KillProcessResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).KillProcess(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.KillProcessResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.KillProcessAsync(MagicLinkWrap.myTaskBuilderServices.KillProcessRequest request) {
            return base.Channel.KillProcessAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.KillProcessResponse> KillProcessAsync(int processId, string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.KillProcessRequest inValue = new MagicLinkWrap.myTaskBuilderServices.KillProcessRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.KillProcessRequestBody();
            inValue.Body.processId = processId;
            inValue.Body.authenticationToken = authenticationToken;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).KillProcessAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.StopProcessResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.StopProcess(MagicLinkWrap.myTaskBuilderServices.StopProcessRequest request) {
            return base.Channel.StopProcess(request);
        }
        
        public bool StopProcess(int processId, string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.StopProcessRequest inValue = new MagicLinkWrap.myTaskBuilderServices.StopProcessRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.StopProcessRequestBody();
            inValue.Body.processId = processId;
            inValue.Body.authenticationToken = authenticationToken;
            MagicLinkWrap.myTaskBuilderServices.StopProcessResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).StopProcess(inValue);
            return retVal.Body.StopProcessResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.StopProcessResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.StopProcessAsync(MagicLinkWrap.myTaskBuilderServices.StopProcessRequest request) {
            return base.Channel.StopProcessAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.StopProcessResponse> StopProcessAsync(int processId, string authenticationToken) {
            MagicLinkWrap.myTaskBuilderServices.StopProcessRequest inValue = new MagicLinkWrap.myTaskBuilderServices.StopProcessRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.StopProcessRequestBody();
            inValue.Body.processId = processId;
            inValue.Body.authenticationToken = authenticationToken;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).StopProcessAsync(inValue);
        }
        
        public void SetForceApplicationDate(bool force) {
            base.Channel.SetForceApplicationDate(force);
        }
        
        public System.Threading.Tasks.Task SetForceApplicationDateAsync(bool force) {
            return base.Channel.SetForceApplicationDateAsync(force);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.SetDataResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.SetData(MagicLinkWrap.myTaskBuilderServices.SetDataRequest request) {
            return base.Channel.SetData(request);
        }
        
        public bool SetData(string authenticationToken, string data, System.DateTime applicationDate, int postingAction, bool useApproximation, out string result) {
            MagicLinkWrap.myTaskBuilderServices.SetDataRequest inValue = new MagicLinkWrap.myTaskBuilderServices.SetDataRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.SetDataRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.data = data;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.postingAction = postingAction;
            inValue.Body.useApproximation = useApproximation;
            MagicLinkWrap.myTaskBuilderServices.SetDataResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).SetData(inValue);
            result = retVal.Body.result;
            return retVal.Body.SetDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.SetDataResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.SetDataAsync(MagicLinkWrap.myTaskBuilderServices.SetDataRequest request) {
            return base.Channel.SetDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.SetDataResponse> SetDataAsync(string authenticationToken, string data, System.DateTime applicationDate, int postingAction, bool useApproximation) {
            MagicLinkWrap.myTaskBuilderServices.SetDataRequest inValue = new MagicLinkWrap.myTaskBuilderServices.SetDataRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.SetDataRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.data = data;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.postingAction = postingAction;
            inValue.Body.useApproximation = useApproximation;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).SetDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetDataResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetData(MagicLinkWrap.myTaskBuilderServices.GetDataRequest request) {
            return base.Channel.GetData(request);
        }
        
        public MagicLinkWrap.myTaskBuilderServices.ArrayOfString GetData(string authenticationToken, string parameters, System.DateTime applicationDate, int loadAction, int resultType, int formatType, bool useApproximation) {
            MagicLinkWrap.myTaskBuilderServices.GetDataRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetDataRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetDataRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.loadAction = loadAction;
            inValue.Body.resultType = resultType;
            inValue.Body.formatType = formatType;
            inValue.Body.useApproximation = useApproximation;
            MagicLinkWrap.myTaskBuilderServices.GetDataResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetData(inValue);
            return retVal.Body.GetDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetDataResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetDataAsync(MagicLinkWrap.myTaskBuilderServices.GetDataRequest request) {
            return base.Channel.GetDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetDataResponse> GetDataAsync(string authenticationToken, string parameters, System.DateTime applicationDate, int loadAction, int resultType, int formatType, bool useApproximation) {
            MagicLinkWrap.myTaskBuilderServices.GetDataRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetDataRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetDataRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.loadAction = loadAction;
            inValue.Body.resultType = resultType;
            inValue.Body.formatType = formatType;
            inValue.Body.useApproximation = useApproximation;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.XmlGetParametersResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.XmlGetParameters(MagicLinkWrap.myTaskBuilderServices.XmlGetParametersRequest request) {
            return base.Channel.XmlGetParameters(request);
        }
        
        public string XmlGetParameters(string authenticationToken, string parameters, System.DateTime applicationDate, bool useApproximation) {
            MagicLinkWrap.myTaskBuilderServices.XmlGetParametersRequest inValue = new MagicLinkWrap.myTaskBuilderServices.XmlGetParametersRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.XmlGetParametersRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.useApproximation = useApproximation;
            MagicLinkWrap.myTaskBuilderServices.XmlGetParametersResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).XmlGetParameters(inValue);
            return retVal.Body.XmlGetParametersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.XmlGetParametersResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.XmlGetParametersAsync(MagicLinkWrap.myTaskBuilderServices.XmlGetParametersRequest request) {
            return base.Channel.XmlGetParametersAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.XmlGetParametersResponse> XmlGetParametersAsync(string authenticationToken, string parameters, System.DateTime applicationDate, bool useApproximation) {
            MagicLinkWrap.myTaskBuilderServices.XmlGetParametersRequest inValue = new MagicLinkWrap.myTaskBuilderServices.XmlGetParametersRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.XmlGetParametersRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.parameters = parameters;
            inValue.Body.applicationDate = applicationDate;
            inValue.Body.useApproximation = useApproximation;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).XmlGetParametersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetXMLHotLink(MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkRequest request) {
            return base.Channel.GetXMLHotLink(request);
        }
        
        public string GetXMLHotLink(string authenticationToken, string docNamespace, string nsUri, string fieldXPath) {
            MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.docNamespace = docNamespace;
            inValue.Body.nsUri = nsUri;
            inValue.Body.fieldXPath = fieldXPath;
            MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetXMLHotLink(inValue);
            return retVal.Body.GetXMLHotLinkResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetXMLHotLinkAsync(MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkRequest request) {
            return base.Channel.GetXMLHotLinkAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkResponse> GetXMLHotLinkAsync(string authenticationToken, string docNamespace, string nsUri, string fieldXPath) {
            MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.docNamespace = docNamespace;
            inValue.Body.nsUri = nsUri;
            inValue.Body.fieldXPath = fieldXPath;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetXMLHotLinkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetDocumentSchema(MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaRequest request) {
            return base.Channel.GetDocumentSchema(request);
        }
        
        public string GetDocumentSchema(string authenticationToken, string documentNamespace, string profileName, string forUser) {
            MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.documentNamespace = documentNamespace;
            inValue.Body.profileName = profileName;
            inValue.Body.forUser = forUser;
            MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetDocumentSchema(inValue);
            return retVal.Body.GetDocumentSchemaResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetDocumentSchemaAsync(MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaRequest request) {
            return base.Channel.GetDocumentSchemaAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaResponse> GetDocumentSchemaAsync(string authenticationToken, string documentNamespace, string profileName, string forUser) {
            MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetDocumentSchemaRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.documentNamespace = documentNamespace;
            inValue.Body.profileName = profileName;
            inValue.Body.forUser = forUser;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetDocumentSchemaAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetReportSchemaResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetReportSchema(MagicLinkWrap.myTaskBuilderServices.GetReportSchemaRequest request) {
            return base.Channel.GetReportSchema(request);
        }
        
        public string GetReportSchema(string authenticationToken, string reportNamespace, string forUser) {
            MagicLinkWrap.myTaskBuilderServices.GetReportSchemaRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetReportSchemaRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetReportSchemaRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.reportNamespace = reportNamespace;
            inValue.Body.forUser = forUser;
            MagicLinkWrap.myTaskBuilderServices.GetReportSchemaResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetReportSchema(inValue);
            return retVal.Body.GetReportSchemaResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetReportSchemaResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetReportSchemaAsync(MagicLinkWrap.myTaskBuilderServices.GetReportSchemaRequest request) {
            return base.Channel.GetReportSchemaAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetReportSchemaResponse> GetReportSchemaAsync(string authenticationToken, string reportNamespace, string forUser) {
            MagicLinkWrap.myTaskBuilderServices.GetReportSchemaRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetReportSchemaRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetReportSchemaRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.reportNamespace = reportNamespace;
            inValue.Body.forUser = forUser;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetReportSchemaAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetXMLEnumResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetXMLEnum(MagicLinkWrap.myTaskBuilderServices.GetXMLEnumRequest request) {
            return base.Channel.GetXMLEnum(request);
        }
        
        public string GetXMLEnum(string authenticationToken, int enumID, string userLanguage) {
            MagicLinkWrap.myTaskBuilderServices.GetXMLEnumRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetXMLEnumRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetXMLEnumRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.enumID = enumID;
            inValue.Body.userLanguage = userLanguage;
            MagicLinkWrap.myTaskBuilderServices.GetXMLEnumResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetXMLEnum(inValue);
            return retVal.Body.GetXMLEnumResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetXMLEnumResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetXMLEnumAsync(MagicLinkWrap.myTaskBuilderServices.GetXMLEnumRequest request) {
            return base.Channel.GetXMLEnumAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetXMLEnumResponse> GetXMLEnumAsync(string authenticationToken, int enumID, string userLanguage) {
            MagicLinkWrap.myTaskBuilderServices.GetXMLEnumRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetXMLEnumRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetXMLEnumRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.enumID = enumID;
            inValue.Body.userLanguage = userLanguage;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetXMLEnumAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetEnumsXml(MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlRequest request) {
            return base.Channel.GetEnumsXml(request);
        }
        
        public string GetEnumsXml(string userLanguage) {
            MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlRequestBody();
            inValue.Body.userLanguage = userLanguage;
            MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetEnumsXml(inValue);
            return retVal.Body.GetEnumsXmlResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetEnumsXmlAsync(MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlRequest request) {
            return base.Channel.GetEnumsXmlAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlResponse> GetEnumsXmlAsync(string userLanguage) {
            MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetEnumsXmlRequestBody();
            inValue.Body.userLanguage = userLanguage;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetEnumsXmlAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetXMLHotLinkDef(MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefRequest request) {
            return base.Channel.GetXMLHotLinkDef(request);
        }
        
        public string GetXMLHotLinkDef(string authenticationToken, string docNameSpace, string nsUri, string fieldXPath, string companyName) {
            MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.docNameSpace = docNameSpace;
            inValue.Body.nsUri = nsUri;
            inValue.Body.fieldXPath = fieldXPath;
            inValue.Body.companyName = companyName;
            MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetXMLHotLinkDef(inValue);
            return retVal.Body.GetXMLHotLinkDefResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetXMLHotLinkDefAsync(MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefRequest request) {
            return base.Channel.GetXMLHotLinkDefAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefResponse> GetXMLHotLinkDefAsync(string authenticationToken, string docNameSpace, string nsUri, string fieldXPath, string companyName) {
            MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetXMLHotLinkDefRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.docNameSpace = docNameSpace;
            inValue.Body.nsUri = nsUri;
            inValue.Body.fieldXPath = fieldXPath;
            inValue.Body.companyName = companyName;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetXMLHotLinkDefAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.RunFunctionResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.RunFunction(MagicLinkWrap.myTaskBuilderServices.RunFunctionRequest request) {
            return base.Channel.RunFunction(request);
        }
        
        public string RunFunction(string authenticationToken, string request, string nameSpace, string functionName, out string errorMsg) {
            MagicLinkWrap.myTaskBuilderServices.RunFunctionRequest inValue = new MagicLinkWrap.myTaskBuilderServices.RunFunctionRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.RunFunctionRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.request = request;
            inValue.Body.nameSpace = nameSpace;
            inValue.Body.functionName = functionName;
            MagicLinkWrap.myTaskBuilderServices.RunFunctionResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).RunFunction(inValue);
            errorMsg = retVal.Body.errorMsg;
            return retVal.Body.RunFunctionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.RunFunctionResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.RunFunctionAsync(MagicLinkWrap.myTaskBuilderServices.RunFunctionRequest request) {
            return base.Channel.RunFunctionAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.RunFunctionResponse> RunFunctionAsync(string authenticationToken, string request, string nameSpace, string functionName) {
            MagicLinkWrap.myTaskBuilderServices.RunFunctionRequest inValue = new MagicLinkWrap.myTaskBuilderServices.RunFunctionRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.RunFunctionRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.request = request;
            inValue.Body.nameSpace = nameSpace;
            inValue.Body.functionName = functionName;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).RunFunctionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetCachedFileResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetCachedFile(MagicLinkWrap.myTaskBuilderServices.GetCachedFileRequest request) {
            return base.Channel.GetCachedFile(request);
        }
        
        public string GetCachedFile(string authenticationToken, string nameSpace, string user, string company) {
            MagicLinkWrap.myTaskBuilderServices.GetCachedFileRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetCachedFileRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetCachedFileRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.nameSpace = nameSpace;
            inValue.Body.user = user;
            inValue.Body.company = company;
            MagicLinkWrap.myTaskBuilderServices.GetCachedFileResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetCachedFile(inValue);
            return retVal.Body.GetCachedFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetCachedFileResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetCachedFileAsync(MagicLinkWrap.myTaskBuilderServices.GetCachedFileRequest request) {
            return base.Channel.GetCachedFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetCachedFileResponse> GetCachedFileAsync(string authenticationToken, string nameSpace, string user, string company) {
            MagicLinkWrap.myTaskBuilderServices.GetCachedFileRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetCachedFileRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetCachedFileRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.nameSpace = nameSpace;
            inValue.Body.user = user;
            inValue.Body.company = company;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetCachedFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetFileStreamResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetFileStream(MagicLinkWrap.myTaskBuilderServices.GetFileStreamRequest request) {
            return base.Channel.GetFileStream(request);
        }
        
        public byte[] GetFileStream(string authenticationToken, string nameSpace, string user, string company) {
            MagicLinkWrap.myTaskBuilderServices.GetFileStreamRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetFileStreamRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetFileStreamRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.nameSpace = nameSpace;
            inValue.Body.user = user;
            inValue.Body.company = company;
            MagicLinkWrap.myTaskBuilderServices.GetFileStreamResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetFileStream(inValue);
            return retVal.Body.GetFileStreamResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetFileStreamResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetFileStreamAsync(MagicLinkWrap.myTaskBuilderServices.GetFileStreamRequest request) {
            return base.Channel.GetFileStreamAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetFileStreamResponse> GetFileStreamAsync(string authenticationToken, string nameSpace, string user, string company) {
            MagicLinkWrap.myTaskBuilderServices.GetFileStreamRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetFileStreamRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetFileStreamRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.nameSpace = nameSpace;
            inValue.Body.user = user;
            inValue.Body.company = company;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetFileStreamAsync(inValue);
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public System.Threading.Tasks.Task<bool> IsAliveAsync() {
            return base.Channel.IsAliveAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetDiagnosticItems(MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsRequest request) {
            return base.Channel.GetDiagnosticItems(request);
        }
        
        public MagicLinkWrap.myTaskBuilderServices.DiagnosticSimpleItem[] GetDiagnosticItems(string authenticationToken, bool clear) {
            MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.clear = clear;
            MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetDiagnosticItems(inValue);
            return retVal.Body.GetDiagnosticItemsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetDiagnosticItemsAsync(MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsRequest request) {
            return base.Channel.GetDiagnosticItemsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsResponse> GetDiagnosticItemsAsync(string authenticationToken, bool clear) {
            MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetDiagnosticItemsRequestBody();
            inValue.Body.authenticationToken = authenticationToken;
            inValue.Body.clear = clear;
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetDiagnosticItemsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetServerPrinterNames(MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesRequest request) {
            return base.Channel.GetServerPrinterNames(request);
        }
        
        public bool GetServerPrinterNames(out MagicLinkWrap.myTaskBuilderServices.ArrayOfString printers) {
            MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesRequestBody();
            MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetServerPrinterNames(inValue);
            printers = retVal.Body.printers;
            return retVal.Body.GetServerPrinterNamesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetServerPrinterNamesAsync(MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesRequest request) {
            return base.Channel.GetServerPrinterNamesAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesResponse> GetServerPrinterNamesAsync() {
            MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetServerPrinterNamesRequestBody();
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetServerPrinterNamesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesResponse MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetInstalledCultures(MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesRequest request) {
            return base.Channel.GetInstalledCultures(request);
        }
        
        public MagicLinkWrap.myTaskBuilderServices.ArrayOfString GetInstalledCultures() {
            MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesRequestBody();
            MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesResponse retVal = ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetInstalledCultures(inValue);
            return retVal.Body.GetInstalledCulturesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesResponse> MagicLinkWrap.myTaskBuilderServices.TbServicesSoap.GetInstalledCulturesAsync(MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesRequest request) {
            return base.Channel.GetInstalledCulturesAsync(request);
        }
        
        public System.Threading.Tasks.Task<MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesResponse> GetInstalledCulturesAsync() {
            MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesRequest inValue = new MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesRequest();
            inValue.Body = new MagicLinkWrap.myTaskBuilderServices.GetInstalledCulturesRequestBody();
            return ((MagicLinkWrap.myTaskBuilderServices.TbServicesSoap)(this)).GetInstalledCulturesAsync(inValue);
        }
    }
}
